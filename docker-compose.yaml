services:
  reverse-proxy:
    restart: unless-stopped
    image: traefik:2.11
    labels:
      - traefik.enable=true
      - traefik.http.routers.rev-proxy.service=api@internal
      - traefik.http.routers.rev-proxy.entrypoints=web-secure
      - traefik.http.routers.rev-proxy.tls=true
    ports:
      # http
      - 80:80
      # https
      - 443:443
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - TRAEFIK_API=true
      # Enable dashboard.
      - TRAEFIK_API_DASHBOARD=true
      # Enable debug logs in container.
      - TRAEFIK_API_DEBUG=true

      - TRAEFIK_LOG=true
      # Log and show everything.
      - TRAEFIK_LOG_LEVEL=DEBUG

      # Run traefik with docker.
      - TRAEFIK_PROVIDERS_DOCKER=true
      - TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT=false
      - TRAEFIK_PROVIDERS_DOCKER_WATCH=true

      # Enable Redis provider.
      - TRAEFIK_PROVIDERS_REDIS=true
      - TRAEFIK_PROVIDERS_REDIS_ENDPOINTS=dragonfly:6379

      - TRAEFIK_ENTRYPOINTS_web=true
      # Listen on http
      - TRAEFIK_ENTRYPOINTS_web_ADDRESS=:80
      # Redirect http to https
      - TRAEFIK_ENTRYPOINTS_web_HTTP_REDIRECTIONS_ENTRYPOINT_TO=web-secure
      - TRAEFIK_ENTRYPOINTS_web_HTTP_REDIRECTIONS_ENTRYPOINT_SCHEME=https

      - TRAEFIK_ENTRYPOINTS_web-secure=true
      # Listen on https
      - TRAEFIK_ENTRYPOINTS_web-secure_ADDRESS=:443

  dragonfly:
    image: 'docker.dragonflydb.io/dragonflydb/dragonfly'
    ulimits:
      memlock: -1
    ports:
      - "6379:6379"
    volumes:
      - ./dragonfly:/data
